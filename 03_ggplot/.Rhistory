left_labs
left_label
right_label
df
library(tidyr)
freqs
spread(freqs, key = country_txt, value = freq)
freq
spread(freqs, key = iyear, value = freq)
freqs[is.na(freqs)] <- 0
head(freqs)
left_label <- paste(freqs$country_txt, freqs$`1970`, sep = ', ')
max(freqs$iyear)
right_label <- paste(freqs$country_txt, freqs$`2016`, sep = ', ')
freqs
freqs
SA <- read.csv('south_amer.csv', header=T)
freqs <- count(SA, c('country_txt','iyear'))
freqs
freqs <- spread(freqs, key = iyear, value = freq)
freqs
freqs[is.na(freqs)] <- 0
head(freqs)
left_label <- paste(freqs$country_txt, freqs$`1970`, sep = ', ')
right_label <- paste(freqs$country_txt, freqs$`2016`, sep = ', ')
freqs$class <- ifelse((df$`1970` - df$`2016`) < 0, "red", "green")
freqs$class <- ifelse((freqs$`1970` - freqs$`2016`) < 0, "red", "green")
head(freqs)
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F)))
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F))
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F)
p
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) #+
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(df$`1952`, df$`1957`))))  # X and Y axis
p
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(freqs$`1952`, freqs$`1957`))))  # X and Y axis
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(freqs$`1952`, freqs$`1957`))))  # X and Y axis
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
#  xlim(.5, 2.5) + ylim(0,(1.1*(max(freqs$`1952`, freqs$`1957`))))  # X and Y axis
p
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") #+  # Axis labels
p
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(freqs$`1970`, freqs$`2016`))))  # X and Y axis
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(freqs$`1970`, freqs$`2016`))))  # X and Y axis
p
p <- p + geom_text(label=left_label, y=freqs$`1970`, x=rep(1, NROW(df)), hjust=1.1, size=3.5)
p <- p + geom_text(label=right_label, y=freqs$`2016`, x=rep(2, NROW(df)), hjust=-0.1, size=3.5)
p <- p + geom_text(label="1970", x=1, y=1.1*(max(freqs$`1970`, freqs$`2016`)), hjust=1.2, size=5)  # title
p <- p + geom_text(label="2016", x=2, y=1.1*(max(freqs$`1970`, freqs$`2016`)), hjust=-0.1, size=5)  # title
p + theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1,2,1,2), "cm"))
df$class <- ifelse((df$`1957` - df$`1952`) < 0, "red", "green")
df
p
p <- p + geom_text(label=left_label, y=freqs$`1970`, x=rep(1, NROW(df)), hjust=1.1, size=3.5)
p <- p + geom_text(label=right_label, y=freqs$`2016`, x=rep(2, NROW(df)), hjust=-0.1, size=3.5)
p <- p + geom_text(label="1970", x=1, y=1.1*(max(freqs$`1970`, freqs$`2016`)), hjust=1.2, size=5)  # title
p <- p + geom_text(label="2016", x=2, y=1.1*(max(freqs$`1970`, freqs$`2016`)), hjust=-0.1, size=5)  # title
p + theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1,2,1,2), "cm"))
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(freqs$`1970`, freqs$`2016`))))  # X and Y axis
p <- p + geom_text(label=left_label, y=freqs$`1970`, x=rep(1, NROW(df)), hjust=1.1, size=3.5)
p <- p + geom_text(label=right_label, y=freqs$`2016`, x=rep(2, NROW(df)), hjust=-0.1, size=3.5)
p <- p + geom_text(label="1970", x=1, y=1.1*(max(freqs$`1970`, freqs$`2016`)), hjust=1.2, size=5)  # title
p <- p + geom_text(label="2016", x=2, y=1.1*(max(freqs$`1970`, freqs$`2016`)), hjust=-0.1, size=5)  # title
p
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(freqs$`1970`, freqs$`2016`))))  # X and Y axis
p
p <- p + geom_text(label=left_label, y=freqs$`1970`, x=rep(1, NROW(df)), hjust=1.1, size=3.5)
p <- p + geom_text(label=right_label, y=freqs$`2016`, x=rep(2, NROW(df)), hjust=-0.1, size=3.5)
p
p <- p + geom_text(label=left_label, y=freqs$`1970`, x=rep(1, NROW(freqs)), hjust=1.1, size=3.5)
p <- ggplot(freqs) +
geom_segment(aes(x=1, xend=2, y=`1970`, yend=`2016`, col=class), size=.75, show.legend=F) +
geom_vline(xintercept=1, linetype="dashed", size=.1) +
geom_vline(xintercept=2, linetype="dashed", size=.1) +
scale_color_manual(labels = c("Up", "Down"),
values = c("green"="#00ba38", "red"="#f8766d")) +  # color of lines
labs(x="", y="Mean GdpPerCap") +  # Axis labels
xlim(.5, 2.5) + ylim(0,(1.1*(max(freqs$`1970`, freqs$`2016`))))  # X and Y axis
p <- p + geom_text(label=left_label, y=freqs$`1970`, x=rep(1, NROW(freqs)), hjust=1.1, size=3.5)
p <- p + geom_text(label=right_label, y=freqs$`2016`, x=rep(2, NROW(freqs)), hjust=-0.1, size=3.5)
p <- p + geom_text(label="1970", x=1, y=1.1*(max(freqs$`1970`, freqs$`2016`)), hjust=1.2, size=5)  # title
p <- p + geom_text(label="2016", x=2, y=1.1*(max(freqs$`1970`, freqs$`2016`)), hjust=-0.1, size=5)  # title
p + theme(panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
plot.margin = unit(c(1,2,1,2), "cm"))
p
ggplot(freqs) + geom_curve(aes(x=1, xend=2, y=freq))
ggplot(freqs) + geom_curve(data=freqs, aes(x=1, xend=2, y=freq))
freqs
melt(freqs, country_txt, 1970:2016)
library(dplr)
library(plyr)
melt(freqs, country_txt, 1970:2016)
library(reshape)
install.packages("reshape")
library(reshape)
melt(freqs, country_txt, 1970:2016)
freqs
SA <- read.csv('south_amer.csv', header=T)
freqs <- count(SA, c('country_txt','iyear'))
freqs
ggplot(freqs) + geom_curve(aes(x=1, xend=2, y=freq))
ggplot(freqs) + geom_line(aes(x = iyear, y=freq))
ggplot(freqs) + geom_line(aes(x = iyear, y=freq)) + geom_point()
ggplot(freqs, aes(x = iyear, y=freq)) + geom_line() + geom_point()
ggplot(freqs, aes(x = iyear, y=freq, group=country_txt)) + geom_line() + geom_point()
ggplot(freqs, aes(x = iyear, y=freq, group=country_txt, color=country_txt)) + geom_line() + geom_point()
ggplot(freqs, aes(x = iyear, y=freq, group=country_txt, color=country_txt)) +
geom_line()
gplot <- ggplot(freqs, aes(x = iyear, y=freq, group=country_txt, color=country_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Country')
gplot <- ggplot(freqs, aes(x = iyear, y=freq, group=country_txt, color=country_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Country')
gplot <- ggplotly(gplot, originalData = F)
saveWidget(g, '03_ggplot.html', selfcontained = TRUE)
gplot <- ggplot(freqs, aes(x = iyear, y=freq, group=country_txt, color=country_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Country')
gplot <- ggplotly(gplot, originalData = F)
saveWidget(gplot, '03_ggplot.html', selfcontained = TRUE)
freqs2 <- count(SA, c('weaptype1_txt','iyear'))
gplot2 <- ggplot(freqs2, aes(x = iyear, y=freq, group=country_txt, color=country_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Weapon Type')
gplot2 <- ggplotly(gplot2, originalData = F)
gplot2 <- ggplot(freqs2, aes(x = iyear, y=freq, group=weaptype1_txt, color=country_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Weapon Type')
gplot2 <- ggplotly(gplot2, originalData = F)
saveWidget(gplot2, '03_ggplot2.html', selfcontained = TRUE)
gplot2 <- ggplot(freqs2, aes(x = iyear, y=freq, group=weaptype1_txt, color=weaptype1_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Weapon Type')
gplot2 <- ggplotly(gplot2, originalData = F)
saveWidget(gplot2, '03_ggplot2.html', selfcontained = TRUE)
gplot2 <- ggplot(freqs2, aes(x = iyear, y=freq, group=weaptype1_txt, color=weaptype1_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Weapon Type') +
scale_fill_discrete(name = 'Weapon Type')
gplot2
gplot2 <- ggplot(freqs2, aes(x = iyear, y=freq, group=weaptype1_txt, color=weaptype1_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Weapon Type') +
scale_color_discrete(name = 'Weapon Type')
gplot2
gplot2 <- ggplot(freqs2, aes(x = iyear, y=freq, group=weaptype1_txt, color=weaptype1_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Weapon Type') +
scale_color_discrete(name = 'Weapon Type')
gplot2
gplot2 <- ggplotly(gplot2, originalData = F)
saveWidget(gplot2, '03_ggplot2.html', selfcontained = TRUE)
gplot <- ggplot(freqs, aes(x = iyear, y=freq, group=country_txt, color=country_txt)) +
geom_line() + labs(x = 'Year', y = '# Incidents', title='Incidents by Year and Country') +
scale_color_discrete(name = 'Country')
gplot
g <- ggplot(SA, aes(x=nperps, y=nkill, col=weaptype1_txt)) + geom_count() +
labs(title='Does the Number of Perpetrators Influence the Number of People Killed?',
subtitle='For incidents with at least one person killed',
x='Number or Perpetrators',
y='Number of People Killed')
g
g <- ggplot(SA, aes(x=nperps, y=nkill, col=weaptype1_txt)) + geom_count() +
labs(title='Does the Number of Perpetrators Influence the Number of People Killed?',
subtitle='For incidents with at least one person killed',
x='Number or Perpetrators',
y='Number of People Killed') + scale_size_discrete(guide=FALSE)
g
g <- ggplot(SA, aes(x=nperps, y=nkill, col=weaptype1_txt)) + geom_count() +
labs(title='Does the Number of Perpetrators Influence the Number of People Killed?',
subtitle='For incidents with at least one person killed',
x='Number or Perpetrators',
y='Number of People Killed') + scale_size_continuous(guide=FALSE)
g
g <- ggplot(SA, aes(x=nperps, y=nkill, col=weaptype1_txt)) + geom_count() +
labs(title='Does the Number of Perpetrators Influence the Number of People Killed?',
subtitle='For incidents with at least one person killed',
x='Number or Perpetrators',
y='Number of People Killed') + scale_size_continuous(guide=FALSE) +
scale_color_discrete(name='Weapon Type')
g
g <- ggplotly(g, originalData = F, tooltip=c('nperps', 'nkill'))
saveWidget(g, '04_ggplot.html', selfcontained = TRUE)
gplot <- ggplotly(gplot, originalData = F, tooltip = c('iyear', 'freq', 'country_txt'))
saveWidget(gplot, '03_ggplot1.html', selfcontained = TRUE)
gplot2 <- ggplotly(gplot2, originalData = F, tooltip = c('iyear', 'freq', 'weaptype1_txt'))
saveWidget(gplot2, '03_ggplot2.html', selfcontained = TRUE)
g <- ggplot(SA, aes(x=nperps, y=nkill, col=weaptype1_txt)) + geom_count() +
labs(title='Does the Number of Perpetrators Influence the Number of People Killed?',
subtitle='For incidents with at least one person killed',
x='Number or Perpetrators',
y='Number of People Killed') + scale_size_continuous(guide=FALSE) +
scale_color_discrete(name='Weapon Type')
g
g <- ggplotly(g, originalData = F, tooltip=c('nperps', 'nkill'))
saveWidget(g, '04_ggplot.html', selfcontained = TRUE)
theme_set(theme_bw())
SA <- read.csv('south_amer.csv', header=T)
ggplot(SA, aes(x=targtype1_txt, y=nkill)) + geom_violin()
nkill.log <- log(nkill)
SA$nkill.log <- log(SA$nkill)
SA$nkill
SA <- read.csv('south_amer.csv', header=T)
SA$nkill.log <- log(SA$nkill)
SA$nkill.log
SA <- SA[which(SA$nkill > -1), ]
SA$nkill.log <- log(SA$nkill)
ggplot(SA, aes(x=targtype1_txt, y=nkill.log)) + geom_violin()
ggplot(SA, aes(x=targtype1_txt, y=nkill.log, col = targtype1_txt)) + geom_violin()
setwd('~/take-home-final/06_Network')
library(igraph)
library(extrafont)
library(RColorBrewer)
library(colorspace)
library(grDevices)
library(networkD3)
library(plyr)
library(scales)
edges <- read.csv('SA_edges2.csv')
edges
head(edges)
nodes <- read.csv('SA_nodes2.csv')
names(edges)
count(edges, c('natlty1_txt','country_txt'))
edges <- count(edges, c('natlty1_txt','country_txt'))
head(edges)
names(edges) <- c('Origin', 'Target', 'Count')
nodes$ID <- c(0:(length(nodes$Origin)-1))
nodes
nodes <- read.csv('SA_nodes2.csv')$X0
head(nodes)
head(nodes)
nodes$ID <- c(0:(length(nodes$X0)-1))
nodes
nodes <- read.csv('SA_nodes2.csv')
nodes$ID <- c(0:(length(nodes$X0)-1))
rownames(nodes) <- nodes$ID
nodes
nodes <- nodes[c('X0', 'ID')]
nodes
nodes <- Data.Frame(nodes$X0)
nodes <- data.frame(nodes$X0)
nodes
g <- graph.data.frame(edges, nodes, directed=T)
unique(nodes$X0)
nodes$X0
rownames(nodes) <- nodes$ID
nodes <- data.frame(nodes$X0)
nodes
nodes <- read.csv('SA_nodes2.csv')
nodes$ID <- c(0:(length(nodes$X0)-1))
nodes <- read.csv('SA_nodes2.csv')
head(nodeds)
head(nodes)
length(nodes)
length(nodes$X0)
edges <- read.csv('SA_edges2.csv')
edges <- read.csv('SA_edges2.csv')
nodes <- read.csv('SA_nodes2.csv')
edges <- count(edges, c('natlty1_txt','country_txt'))
names(edges) <- c('Origin', 'Target', 'Count')
nodes$ID <- c(0:(length(nodes$X0)-1))
nodes
length(nodes)
length(nodes$X)
edges <- read.csv('SA_edges2.csv')
nodes <- read.csv('SA_nodes2.csv')
edges <- count(edges, c('natlty1_txt','country_txt'))
names(edges) <- c('Origin', 'Target', 'Count')
nodes$ID <- c(0:(length(nodes$X0)-1))
rownames(nodes) <- nodes$ID
nodes <- data.frame(nodes$X0)
g <- graph.data.frame(edges, nodes, directed=T)
g
plot(g)
E(g)$label <- edges$Count
E(g)$label.cex <- .8
g
plot(g)
head(nodes)
E(g)$arrow.size <- rescale(edges$Count)/2
E(g)
plot(g)
plot(g, main='Where do South American Attackers Come From?')
E(g)$arrow.size <- rescale(edges$Count)
plot(g, main='Where do South American Attackers Come From?')
rescale(edges$Count)
E(g)$arrow.size <- edges$Count
plot(g, main='Where do South American Attackers Come From?')
E(g)$arrow.size <- edges$Count/5
E(g)$arrow.size <- .5
plot(g, main='Where do South American Attackers Come From?')
E(g)$arrow.size <- .25
nodes$Count
edges$Count
head(edges)
head(edges, 10)
aggregate(edges, by=list(edges$Target), FUN=sum)
aggregate(edges[c('Target', 'Count')], by=list(edges$Target), FUN=sum)
edges[c('Target', 'Count')]
e2 <- edges[c('Target', 'Count')]
e2
n1$Count
n1 <- edges[c('Target', 'Count')]
n1$Count
aggregate(n1, by=list(edges$Target), FUN=sum)
df[] <- lapply(n1, function(x) type.convert(as.character(x)))
n1[,1]
n1[,2]
n1[,2] <- as.numeric(as.character( n1[, 2] ))
aggregate(n1, by=list(edges$Target), FUN=sum)
n1
aggregate(n1$Target, by=list(edges$Target), FUN=sum)
aggregate(n1$Count, by=list(edges$Target), FUN=sum)
head(n1)
head(nodes)
head(n1)
head(nodes)
names(nodes) <- 'Target'
merge(nodes, n1, by='Target')
names(nodes) <- 'Target'
nodes <- read.csv('SA_nodes2.csv')
nodes$ID <- c(0:(length(nodes$X0)-1))
rownames(nodes) <- nodes$ID
nodes <- data.frame(nodes$X0)
head(nodes)
names(nodes) <- 'Target'
head(nodes)
head(n1)
merge(nodes, n1, by='Target')
merge(nodes, n1, by='Target', all.x = TRUE)
nodes
n1
n1 <- edges[c('Target', 'Count')]
n1 <- aggregate(n1$Count, by=list(edges$Target), FUN=sum)
head(n1)
head(nodes)
names(nodes) <- 'Target'
merge(nodes, n1, by='Target', all.x = TRUE)
head(n1)
names(n1) <- c('Target', 'Count')
head(nodes)
names(nodes) <- 'Target'
merge(nodes, n1, by='Target', all.x = TRUE)
nodes <- merge(nodes, n1, by='Target', all.x = TRUE)
library(dplyr)
nodes[is.na(nodes)] <- 0
nodes
V(g)$size <- with(nodes, ifelse(Count == 0, 3, 10))
g <- graph.data.frame(edges, nodes, directed=T)
E(g)$label <- edges$Count
E(g)$label.cex <- .8
V(g)$size <- with(nodes, ifelse(Count == 0, 3, 10))
E(g)$arrow.size <- .25
plot(g, main='Where do South American Attackers Come From?')
legend('bottomleft', unique(V(g)$Conference),
pch=21,col=col.a, pt.bg=col.a, pt.cex=1.5, cex=1, bty="n",
ncol=1, title = 'Conference')
dev.off()
plot(g, main='Where do South American Attackers Come From?')
pdf('Graphics/StaticNetwork.pdf', height=20, width=30)
edges <- read.csv('SA_edges2.csv')
pdf('06_Network.pdf', height=20, width=30)
# Read data
edges <- read.csv('SA_edges2.csv')
nodes <- read.csv('SA_nodes2.csv')
edges <- count(edges, c('natlty1_txt','country_txt'))
names(edges) <- c('Origin', 'Target', 'Count')
nodes$ID <- c(0:(length(nodes$X0)-1))
rownames(nodes) <- nodes$ID
nodes <- data.frame(nodes$X0)
n1 <- edges[c('Target', 'Count')]
n1 <- aggregate(n1$Count, by=list(edges$Target), FUN=sum)
names(n1) <- c('Target', 'Count')
names(nodes) <- 'Target'
nodes <- merge(nodes, n1, by='Target', all.x = TRUE)
nodes[is.na(nodes)] <- 0
###### --------------------
# Set up network
g <- graph.data.frame(edges, nodes, directed=T)
#plot(g)
# Edge label is score differential
E(g)$label <- edges$Count
E(g)$label.cex <- .8
# Vertex colors based on conference
#col.a <- palette(rainbow_hcl(length(unique(nodes$ConfNum)), start = 10, end = 440))
#col.a <- palette(c(brewer.pal(n = 10, name = "Set3"), brewer.pal(n = 8, name = "Set1")))
#col.a <- palette(c('darkseagreen', 'indianred3', 'powderblue', 'royalblue2',
#                   'yellowgreen', 'tan1', 'cornflowerblue', ' plum3', 'rosybrown3',
#                   'darkolivegreen1', 'lightpink2', 'lightseagreen', 'lightsteelblue2',
#                   'salmon', 'pink2', 'tomato2', 'slateblue2', 'gold', 'mediumpurple1', 'cadetblue'))
#V(g)$color <- col.a[V(g)$Conference.Num]
# Vertex size by rank
#V(g)$size <- with(nodes, ifelse(College.Football.Playoff.Ranking < 25, 8, 3))
# Bigger labels for highly ranked schools
#V(g)$label.cex <- with(nodes, ifelse(College.Football.Playoff.Ranking < 25, 1, .5))
V(g)$size <- with(nodes, ifelse(Count == 0, 3, 10))
# Rescale to 0 -> 1
E(g)$arrow.size <- .25
# Plot
plot(g, main='Where do South American Attackers Come From?')
legend('bottomleft', unique(V(g)$Conference),
pch=21,col=col.a, pt.bg=col.a, pt.cex=1.5, cex=1, bty="n",
ncol=1, title = 'Conference')
dev.off()
V(g)$size
V(g)$size <- with(nodes, ifelse(Count == 0, 3, 10))
V(g)$size <-
# Bigger labels for highly ranked schools
#V(g)$label.cex <- with(nodes, ifelse(College.Football.Playoff.Ranking < 25, 1, .5))
V(g)$size <- with(nodes, ifelse(Count == 0, 3, 10))
with(nodes, ifelse(Count == 0, 3, 10))
nodes
edges <- read.csv('SA_edges2.csv')
nodes <- read.csv('SA_nodes2.csv')
edges <- count(edges, c('natlty1_txt','country_txt'))
names(edges) <- c('Origin', 'Target', 'Count')
nodes$ID <- c(0:(length(nodes$X0)-1))
rownames(nodes) <- nodes$ID
edges
edges <- read.csv('SA_edges2.csv')
nodes <- read.csv('SA_nodes2.csv')
edges <- count(edges, c('natlty1_txt','country_txt'))
edges <- read.csv('SA_edges2.csv')
nodes <- read.csv('SA_nodes2.csv')
head(edges)
edges <- count(edges, c('natlty1_txt','country_txt'))
nodes <- read.csv('SA_nodes2.csv')[c('natlty1_txt', 'country_txt')]
edges <- read.csv('SA_edges2.csv')[c('natlty1_txt', 'country_txt')]
nodes <- read.csv('SA_nodes2.csv')
edges <- count(edges, c('natlty1_txt','country_txt'))
count(edges)
count(edges, c('natltly1_txt'))
count(edges, c('natltly1_txt', 'country_txt'))
freqs <- count(SA, c('country_txt','iyear'))
SA <- read.csv('south_amer.csv', header=T)
freqs <- count(SA, c('country_txt','iyear'))
setwd('~/take-home-final/03_TimePlot')
SA <- read.csv('south_amer.csv', header=T)
freqs <- count(SA, c('country_txt','iyear'))
